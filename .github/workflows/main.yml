name: Build

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: synccacr 
  CLUSTER_NAME: synnc-dev-k8
  CLUSTER_RESOURCE_GROUP: synnc-dev-k8
  IMAGE: synnc-ui
  NAMESPACE: synnc-ui 

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: release

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Connect to Azure Container registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Container build and push to a Azure Container registry (ACR)
      - name: Build and push server image
        run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}

      - name: Build and push worker image
        run: |
          docker tag ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }} ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE }}:latest
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE }}:latest

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.PRE_PROD_KUBE_CONFIG }}
        id: login 

      # Deploy app to AKS
      - name: Deploy syncc-api
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/deployment.yaml
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE }}:${{ github.sha }}
          namespace: ${{ env.NAMESPACE }}
